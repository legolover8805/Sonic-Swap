<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100024</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    alarm[0]    = 1;
    
    BlueY       = 0;
    RedX        = -1;
    YellowX     = -1;
    ZoneName    = global.LevelNames[? room];
    Act         = global.LevelActs[? room];
    draw_set_font(global.FontTitle);
    Text1X      = view_wview[0]+string_width(ZoneName)+1; 
    Text2X      = -30;
    Part        = 1;

    HUD                 = surface_create(view_wview[0], view_hview[0]);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    surface_free(HUD);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    instance_deactivate_all(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
        if(Part &gt;= 2 &amp;&amp; instance_count &lt;= 2){
            instance_activate_all();
        } 

    if(floor(Part) == 1){
        if(BlueY &lt; view_hview[0])
            BlueY += 12;
        
        if(BlueY &gt; view_hview[0]/2 &amp;&amp; YellowX &lt; view_wview[0])
            YellowX += 16;
    
        if(YellowX &gt; view_wview[0]-120 &amp;&amp; RedX &lt; 120)
            RedX = min(RedX+8, 120);
    
        if(RedX == 120 &amp;&amp; Text1X &gt; view_wview[0]-32)
            Text1X = max(Text1X-16, view_wview[0]-32);
    
        if(RedX == 120  &amp;&amp; Text2X &lt; view_wview[0]-55)
            Text2X = min(Text2X+16, view_wview[0]-55);
        if(Text2X == view_wview[0]-55){
            Part += 0.02;
            if(Part == 2){
                instance_activate_all();
            }
        }      
    }else if(floor(Part) == 2){
        if(RedX &gt; -2)
            RedX = max(RedX-8, -2);   
        if(RedX &lt; 110 &amp;&amp; YellowX &gt; -2)
            YellowX = max(YellowX-16, -2);     
        if(YellowX &lt; (view_wview[0]/2) &amp;&amp; BlueY &gt;= -2)
            BlueY = max(BlueY-12, -2);  
        if(BlueY &lt;= -2){
            Part += 0.02;
        }
        
    }else if(floor(Part) == 3){
        Text1X  += 16;
        Text2X  -= 16;
        if(Text2X &lt; -100){
            instance_destroy();
        }   
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    if(surface_exists(HUD))    
        draw_surface_stretched(HUD, 0, 0, display_get_gui_width(), display_get_gui_height());
    else
        HUD = surface_create(view_wview[0], view_hview[0]);    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

  //  surface_set_target(HUD);
   // draw_clear_alpha(c_white, 0);
    if(Part == 1){    
        draw_set_colour(c_black);
        draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);
    }
    draw_set_colour(c_blue);
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], view_yview[0]+BlueY, false);
    
    draw_set_colour(c_yellow);
    draw_rectangle(view_xview[0]+view_wview[0]-YellowX, view_yview[0]+view_hview[0]-64, view_xview[0]+view_wview[0], view_yview[0]+view_hview[0], false);
    
    draw_set_colour(c_white);
    
    draw_sprite(sprTitleCardSonic, 0, (view_xview[0]+view_wview[0]-YellowX)+168, view_yview[0]+view_hview[0]-56)
    
    i = 0;
    repeat(ceil(view_hview[0]/80)){
        draw_sprite(sprTitleCardRed, 0, view_xview[0]+RedX, view_yview[0]+i);
        i += 80;
    }
    
    draw_set_font(global.FontTitle);
    draw_set_halign(fa_right);
    draw_text(view_xview[0]+Text1X, view_yview[0]+64, ZoneName);
    draw_text(view_xview[0]+Text2X, view_yview[0]+88, "ZONE");
    draw_sprite(sprFontAct, Act-1, view_xview[0]+Text2X+1, view_yview[0]+88);
    draw_set_halign(fa_left);
   // surface_reset_target();
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
