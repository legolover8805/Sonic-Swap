<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> 
    Continue = false;
   
    with(objPlayer){
        if(x &gt; other.RoomLength+view_wview[0]){
            x -= other.RoomLength;
            instance_activate_region(x-128, y-128, x+128, y+128, 1);
            if(Ground)
                scrCheckGroundLevel();
            Camera.x -= other.RoomLength;
            Camera.alarm[0] = 2;
            Camera.CameraLock = true;
            view_xview[PlayerId] -= other.RoomLength;
            other.Continue = true;   
            other.Lap += 1;     
            for (_i=0; _i&lt;20; _i+=1){
                // Retrieve values
                _X1 = ds_list_find_value(VertexX1, _i);
                _X2 = ds_list_find_value(VertexX2, _i);

                //Replace with interpolated ones
                ds_list_replace(VertexX1, _i, _X1-other.RoomLength);
                ds_list_replace(VertexX2, _i, _X2-other.RoomLength);
            }
        }else if(x &lt; view_wview[0]){
            x += other.RoomLength;
            instance_activate_region(x-128, y-128, x+128, y+128, 1);
            if(Ground)
                scrCheckGroundLevel();
            Camera.x += other.RoomLength;
            Camera.alarm[0] = 2;
            Camera.CameraLock = true;
            view_xview[PlayerId] += other.RoomLength;
            other.Lap -= 1;  
            for (_i=0; _i&lt;20; _i+=1){
                // Retrieve values
                _X1 = ds_list_find_value(VertexX1, _i);
                _X2 = ds_list_find_value(VertexX2, _i);

                //Replace with interpolated ones
                ds_list_replace(VertexX1, _i, _X1+other.RoomLength);
                ds_list_replace(VertexX2, _i, _X2+other.RoomLength);
            } 
        }
    }
    if(Continue == true &amp;&amp; Lap == NextLap){
       i = 0;
       NextLap += 1;
       repeat(RingAmount){
           with(instance_position(RingX[i], RingY[i], objRing))
               instance_destroy();
           instance_create(RingX[i], RingY[i], objRing);
           i++;
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    RoomLength     = 1024;
    RepRoomLength  = room_width-RoomLength;
    RingAmount     = 0;
    Lap            = 1;
    NextLap        = 2;
    with(all){
        if(object_index != objPlayer &amp;&amp; object_index != objCamera &amp;&amp; object_index != objController &amp;&amp; object_index != objTitleCard 
        &amp;&amp; object_index != other.object_index &amp;&amp; object_index != objEHZBG &amp;&amp; object_index != objGlobal){
            Ins = instance_copy(true);
            Ins.x += other.RoomLength;
        }
    }
    with(objRing){
        other.RingAmount ++;  
        other.RingX[other.RingAmount] = x;
        other.RingY[other.RingAmount] = y;              
    }
    with(objPlayer){
        x += other.RoomLength;
        Camera.x += other.RoomLength;
        //Camera.alarm[0] = 20;
        //Camera.CameraLock = true;
        view_xview[PlayerId] += other.RoomLength;
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
