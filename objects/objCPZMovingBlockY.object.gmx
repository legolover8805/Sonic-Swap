<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCPZMovingBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMovingSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    Parent = true;
    
    image_speed = 0.1;

    alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(Parent == false)
        exit;

    Y2 = y+sprite_height;
    X2 = x+sprite_width;
    i = 0;
    repeat(3){
        Ins[i] = instance_create(X2, Y2, object_index);
        Ins[i].Parent = false;
        Y2 += sprite_height;
        X2 += sprite_width;
        i++;
    }

    X = 1;
    Y = 1;
    Step = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PlayerId = 0;
    repeat(instance_number(objPlayer)){
        Player = global.Player[PlayerId]
        if(Player.TerrainId == id &amp;&amp; Player.Ground == true){
            with(Player)
                scrPlayerCollisionSquishTop();
            Player.x += x-xprevious;
            Player.y += y-yprevious;
        }
        PlayerId += 1;
    } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    

    if(Parent == true){
        PlayerId = 0;
        repeat(instance_number(objPlayer)){
            Player = global.Player[PlayerId]
            if(Player.TerrainId == id &amp;&amp; Player.Ground == true){
                with(Player)
                    scrPlayerCollisionSquishTop();
                Player.x += x-xprevious;
                Player.y += y-yprevious;
            }
            PlayerId += 1;
        }
        
        if(Step == 1){
            y += 1;
            Y = 1-(((y-ystart)/96)*2)
            if(y &gt;= ystart+96){
                y = ystart+96;
                Y = -1;
                Step = 2;
            }
        }else if(Step == 2){
            y -= 1;
            Y = 1-(((y-ystart)/96)*2)
            if(y &lt;= ystart){
                y = ystart;
                Y = 1;
                Step = 1;
            }
        }
    
        i = 0;
        repeat(3){
            Ins[i].x = x+((sprite_width*X)*(i+1));
            Ins[i].y = y+((sprite_height*Y)*(i+1));

            i++;
        }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
