<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRingSmooth</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    
    image_speed     = 2;

    Alarm           = 0;

    _LenX           = 0;
    _LenY           = 0;

    Speed           = 0;
    Gravity         = 0;

    Motion          = false;
    MotionTimer     = 0;

    Spd             = 2;

    Attract         = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(instance_exists(objEndlessExample)){
        with(objRing){
            if(id == other.id)
                continue;
            if(y != other.y)
                continue;
            if(x == other.x+objEndlessExample.RoomLength){
                instance_destroy();
            }else if(x == other.x-objEndlessExample.RoomLength){
                instance_destroy();
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    image_index = global.Frame/Spd;
    if(point_in_rectangle(x, y, view_xview[0]-20, view_yview[0]-20, view_xview[0]+view_wview[0]+40, view_yview[0]+view_hview[0]+40) == false){
       if(Motion == false &amp;&amp; objController.TimerCount == true &amp;&amp; Attract == false){
           instance_deactivate_object(id);
           
       }
       if(Motion == true){
           MotionTimer++;
       }
       exit;
    }
    if(Motion == true){
        x += Speed;
        y += Gravity;
        MotionTimer += 1;
        if(MotionTimer &gt;= 256)
            instance_destroy();
        Terrain = collision_line(x+8, y, x+8, y+18, objParentTerrain, true, true);
        if(Terrain != noone &amp;&amp; Gravity &gt; 0){
            if(Terrain.Layer == -1){
                Gravity *= -0.75;
            }
        }
        Terrain = collision_line(x+8, y, x+8, y-2, objParentTerrain, true, true);
        if(Terrain != noone &amp;&amp; Gravity &lt; 0){
            if(Terrain.Layer == -1){
                Gravity *= -0.75;
            }
        }
        Terrain = collision_line(x-2, y+8, x+8, y+8, objParentTerrain, true, true);
        if(Terrain != noone &amp;&amp; Speed &lt; 0){
            if(Terrain.Layer == -1){
                Speed *= -0.25;
            }
        }
        Terrain = collision_line(x+8, y+8, x+18, y+8, objParentTerrain, true, true);
        if(Terrain != noone &amp;&amp; Speed &gt; 0){
            if(Terrain.Layer == -1){
                Speed *= -0.25;
            }
        }
        Gravity += 0.09375;        
    }else{
        _Player = global.Player[0];
        if(_Player.Shield == consShieldElectric &amp;&amp; distance_to_object(_Player) &lt; 80)
            Attract = true;               
    }
    if(Attract == true){
        _Player = global.Player[0];
        _Dir = point_direction(x, y, _Player.x, _Player.y);
        _LenX   = min(8, max(-8, _LenX+global.Cos[_Dir]*0.25));
        _LenY   = min(8, max(-8, _LenY-global.Sin[_Dir]*0.25));

        x += _LenX+global.Cos[_Dir];        
        y += _LenY-global.Sin[_Dir];    
    }
    if(Alarm &gt; 0)
        Alarm -= 1;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(objGlobal.HDRing == true)
        scrDrawScaled(sprRingHD, global.Frame/2, x, y, 4, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(objGlobal.HDRing == false)
        draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
