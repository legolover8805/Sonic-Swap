<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    Acts[0] = 2;
    Acts[1] = 1;
    Acts[2] = 1;
    Acts[3] = 1;

    Zones   = 3;

    ZoneName[0] = "TEST LEVEL";
    ZoneName[1] = "GREEN HILL";
    ZoneName[2] = "EMERALD HILL";
    ZoneName[3] = "ENDLESS TEST";

    SelectedZone = 0;
    SelectedAct  = 1;

    DrawName     = true;

    Levels[0] = roomTestLevel;
    Levels[1] = roomTestLevel2;
    Levels[2] = roomGreenHill1;
    Levels[3] = roomEmeraldHill1;
    Levels[4] = roomEndlessTest;
    Level     = 0;
    Sound     = 0;
    while(sound_exists(Sound) == false)
        Sound++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(keyboard_check_pressed(global.InputA)){    
        if(SelectedZone == Zones &amp;&amp; Sound &gt; 0)
            Sound--;
    }else if(keyboard_check_pressed(global.InputB)){    
        if(SelectedZone == Zones &amp;&amp; sound_exists(Sound+1))
            Sound++;
    }else if(keyboard_check_pressed(global.InputC)){    
        audio_stop_all();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    draw_set_font(global.FontS2System);
    var Zone = 0;
    var Act  = 1;
    var Y = 32;
    var X = 32;
   // if(SelectedZone == Zone)
            
    repeat(Zones){
        draw_set_colour(c_white);
        if(SelectedZone == Zone)
            draw_set_colour(c_yellow);
        draw_text(X, Y, ZoneName[Zone]); 
       
        Act = 1;
        if(Acts[Zone] &gt; 1){
            repeat(Acts[Zone]){  
                draw_set_colour(c_white);
                if(SelectedAct == Act &amp;&amp; SelectedZone == Zone)
                    draw_set_colour(c_yellow);         
                draw_text(X+120, Y+(8*(Act-1)), Act);
                Act++;
            }
        }
        Y += 24;
        Zone++;
    }
    if(SelectedZone == Zones)
        draw_set_colour(c_yellow);
    else
        draw_set_colour(c_white);

    if(DrawName == true)
        draw_text(X, Y, "SOUND TEST @"+string_delete(string_upper(audio_get_name(Sound)), 1, 3)+"@")    
    else
    draw_text(X, Y, "SOUND TEST @"+string(Sound)+"@");
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(SelectedZone &lt; Zones){
        if(SelectedAct &lt; (Acts[SelectedZone])){
            SelectedAct++;
        }else{
            SelectedZone++;
            SelectedAct = 1;
        }
        audio_play_sound(sndSwitchBlip, 1, false);
        if(SelectedZone &lt; Zones)
            Level++;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(SelectedZone &gt; 0 || SelectedAct &gt; 1){
        if(SelectedAct &gt; 1){
            SelectedAct--;
        }else{
            SelectedZone--;
            SelectedAct = Acts[SelectedZone];
        }
        audio_play_sound(sndSwitchBlip, 1, false);
        Level--;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    //room_goto(Levels[Level]);
    if(SelectedZone == Zones){
        audio_stop_all();
        audio_play_sound(Sound, 1, false);
    }else{
        global.Level = ds_list_find_index(global.LevelList, Levels[Level]);
        global.Save  = -1;
        with(objGlobal)
            script_execute(choose(scrTransitionCRT, scrTransitionRibbon), roomOptions);
       // room_goto(roomOptions);
    }
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
