<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    global.Spindash        = true;
    global.RotationMode    = true;
    global.UseTrail        = false;
    global.UsePeelout      = true;   

    global.SpeedCap        = false; 


    VSelect = 1; 
    Options = 2;
    
    alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

    window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if((keyboard_check_pressed(vk_down)) &amp;&amp;(VSelect &lt; Options)){
        VSelect++;
        audio_play_sound(sndSwitchBlip, 1, false);
        exit;
    }else if((keyboard_check_pressed(vk_up)) &amp;&amp; (VSelect &gt; 1)){
        VSelect--;
        audio_play_sound(sndSwitchBlip, 1, false);
        exit;
    }
    if(keyboard_check_pressed(vk_right) || keyboard_check_pressed(vk_left)){
        switch(VSelect){
            case 2:
                objGlobal.VSync = !objGlobal.VSync;
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
        }
    }
    if(keyboard_check_pressed(vk_right) &amp;&amp; VSelect == 1){
        switch(objGlobal.AA){
            case 0:
                if(display_aa &gt;= 2)
                    objGlobal.AA = 2;                   
                else
                    objGlobal.AA = 0;                               
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 2:
                if(display_aa &gt;= 6)
                    objGlobal.AA = 4;                   
                else
                    objGlobal.AA = 0;                               
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 4:
                if(display_aa &gt;= 12)
                    objGlobal.AA = 8;                   
                else
                    objGlobal.AA = 0;                               
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 8:
                objGlobal.AA = 0;
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
        }
    }
    if(keyboard_check_pressed(vk_left) &amp;&amp; VSelect == 1){
        switch(objGlobal.AA){
            case 0:
                if(display_aa &gt;= 12)
                    objGlobal.AA = 8;                   
                else if(display_aa &gt;= 6)
                    objGlobal.AA = 4;
                else if(display_aa &gt;= 2)
                    objGlobal.AA = 2;  
                else
                    objGlobal.AA = 0;  
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 2:
                objGlobal.AA = 0;
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 4:
                objGlobal.AA = 2;
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
            case 8:
                objGlobal.AA = 4;
                audio_play_sound(sndSwitchBlip, 1, false);
                break;
        }
    }

    if(keyboard_check_pressed(vk_enter) &amp;&amp; objGlobal.Transition == -1){

     with(objGlobal){
        display_reset(AA, VSync);

        window_set_size(Resolution[0]*Scale, Resolution[1]*Scale);
        display_set_gui_size(Resolution[0]*Scale, Resolution[1]*Scale);
    
    
    
        view_wport[0] = round(window_get_width());
        view_hport[0] = round(window_get_height());
    
        global.ViewWidth    = 320;
        global.ViewHeight   = 224;
    
        surface_resize(application_surface, round(window_get_width()), round(window_get_height()));
    }

        with(objGlobal)
            script_execute(scrTransitionCRT, room_next(room));
       // room_goto_next();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    draw_set_font(global.FontS2System);

/*
AA      = 0;    
    VSync   = false;
    if(display_aa &gt;= 12 &amp;&amp; show_question("Turn on Anti-Aliasing and Vsync?") == true){
        display_reset(8, true);
        AA      = 8;
        VSync   = true;
    }
    
*/
// ------------ SPINDASH ----------    
    if(VSelect == 1)
        draw_set_colour(c_yellow);
    else
        draw_set_colour(c_white);
    
    draw_text(10, 32, "FXAA");

    draw_set_halign(fa_center)

    draw_set_colour(c_white);

    if(objGlobal.AA == 0)
        draw_set_colour(c_yellow);

    draw_text(170, 32, "OFF");
    draw_set_colour(c_white);

    if(objGlobal.AA == 2)
        draw_set_colour(c_yellow);

    draw_text(205, 32, "LOW");
    draw_set_colour(c_white);
    
    if(objGlobal.AA == 4)
        draw_set_colour(c_yellow);

    draw_text(240, 32, "MID");
    draw_set_colour(c_white);
    
    if(objGlobal.AA == 8)
        draw_set_colour(c_yellow);

    draw_text(275, 32, "HIGH");
    draw_set_colour(c_white);

    draw_set_halign(fa_left)
    

// ------------ ROTATION MODE ----------
    if(VSelect == 2)
        draw_set_colour(c_yellow);
    
    draw_text(10, 48, "VSYNC");

    draw_set_colour(c_white);  

    
    if(objGlobal.VSync == false)
        draw_set_colour(c_yellow);

    draw_text(160, 48, "OFF");
    draw_set_colour(c_white);

    if(objGlobal.VSync == true)
        draw_set_colour(c_yellow);

    draw_text(240, 48, "ON");
    draw_set_colour(c_white);  

// ------------ TRAIL ----------
   /*if(VSelect == 3)
        draw_set_colour(c_yellow);
    
    draw_text(10, 64, "USE TRAIL");

    draw_set_colour(c_white);  
    
    if(global.UseTrail == false)
        draw_set_colour(c_yellow);

    draw_text(160, 64, "FALSE");
    draw_set_colour(c_white);

    if(global.UseTrail == true)
        draw_set_colour(c_yellow);

    draw_text(240, 64, "TRUE");
    draw_set_colour(c_white);

// ------------ PEELOUT ----------
   if(VSelect == 4)
        draw_set_colour(c_yellow);
    
    draw_text(10, 80, "PEELOUT");

    draw_set_colour(c_white);  
    
    if(global.UsePeelout == false)
        draw_set_colour(c_yellow);

    draw_text(160, 80, "FALSE");
    draw_set_colour(c_white);

    if(global.UsePeelout == true)
        draw_set_colour(c_yellow);

    draw_text(240, 80, "TRUE");
    draw_set_colour(c_white);
/*
    if(VSelect == 5)
        draw_set_colour(c_yellow);
    
    draw_text(10, 80, "SPEED CAP");

    draw_set_colour(c_white);  
    
    if(global.SpeedCap == false)
        draw_set_colour(c_yellow);

    draw_text(160, 80, "FALSE");
    draw_set_colour(c_white);

    if(global.SpeedCap == true)
        draw_set_colour(c_yellow);

    draw_text(240, 80, "TRUE");
    draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
