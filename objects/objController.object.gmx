<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10024</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

    audio_stop_all();
    if(ds_map_exists(LvlMusic, room)){
        global.CurrentSong = LvlMusic[? room];
        audio_play_sound(global.CurrentSong, 100, true);
    }else
        global.CurrentSong = -1;
    if(ds_map_exists(global.LevelActs, room))
        global.Act         = global.LevelActs[? room];
    else
        global.Act         = 1;


    if(global.Checkpoint == false)
        global.GameTime     = 0;
    else
        global.GameTime     = global.CheckpointTime;
        
    i = 0;
    repeat(10){
        global.Switch[i] = false;
        i += 1;
    }    
    
    SpeedMultiplier     = 1;

    global.Rings        = 0;
    global.RingsLife    = 100;
    global.Frame        = 0;
    TimerCount          = true;
    
    //HUD                 = surface_create(view_wview[0], view_hview[0]);
    
    alarm[0]            = 1;
    
    LifeMusic           = false;
    
    CameraMinX          = 0;
    CameraMaxX          = room_width;

    CameraMaxY          = room_height;
    CameraMinY          = 0;
        
    view_wview[0]       = global.ViewWidth;
    view_hview[0]       = global.ViewHeight;
    view_hborder[0]     = 152;
    view_vborder[0]     = 96;
    if(instance_exists(objMovingLava))
        instance_create(0, 0, objLavaDraw);
    
    MashY = 0;
    MashGravity = -4;

    if(instance_exists(objEnemyMasher))
        MashExists = true;
    else
        MashExists = false

    ChopY = 0;
    ChopGravity = -7;

    if(instance_exists(objEnemyChopper))
        ChopExists = true;
    else
        ChopExists = false



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(global.Character[1] != consCharacterNone)
        instance_create(objPlayer.x, objPlayer.y, objPlayer);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main
    var Player, Object;

    if(keyboard_check_pressed(global.InputStart) &amp;&amp; instance_exists(objPause) == false &amp;&amp; TimerCount == true &amp;&amp; instance_exists(objTitleCard) == false 
    &amp;&amp; instance_exists(objResults) == false){
        Pause = instance_create(0, 0, objPause);
        with(Pause){
            audio_pause_sound(global.CurrentSong);
            if(instance_exists(objWaterfallSound))
                audio_pause_sound(sndWaterfall);
            if(instance_exists(objGameOver))
                audio_pause_sound(sndGameOver);
            audio_play_sound(sndSwitchBlip, 1, false);
            Screen                  = surface_create(view_wview[0], view_hview[0]);
            GUI                     = surface_create(display_get_gui_width(), display_get_gui_height());
            view_surface_id[0]      = Screen;
            Step                    = 0;
            alarm[0]                = 3;
        }
        keyboard_clear(global.InputStart);
    }



    instance_activate_all();
   /* with(objRing){
        if(Motion == false)
            continue;
        else
            MotionTimer += 1;
    }*/
    Object = noone;
    with(objPushableTerrain){
        other.Object = instance_place(x, y+2, objParentTerrain);
        if(other.Object != noone) 
            instance_activate_object(other.Object);
    }
    instance_deactivate_object(objDeactivable);
    instance_activate_object(objMovingPlatform);
    instance_activate_object(objFallingPlatform);
    instance_activate_object(objSwingingPlatform);
    instance_activate_object(objBrokenTerrain);
    instance_activate_object(objObjectSeesaw);
    instance_activate_object(objObjectSpikeball);
    if(TimerCount == false)
        instance_activate_object(objRing);
    else
        global.GameTime = min(global.GameTime+(1000/60), 599000);
    instance_activate_region(view_xview[0]-ActivateDistanceX, view_yview[0]-ActivateDistanceY, view_wview[0]+ActivateDistanceX*2, view_hview[0]+ActivateDistanceY*2, true);
    i = 0;
    repeat(instance_number(objPlayer)){
        Player = global.Player[i];
        instance_activate_region(Player.x-100, Player.y-100, 200, 200, true);
        i += 1;
    }
        
            
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speed

    if(SpeedMultiplier != 1){
        with(objPlayer)
            SpeedMultiplier = other.SpeedMultiplier;
        with(objParentEnemy){
            x = xprevious+((x-xprevious)*other.SpeedMultiplier);
            y = yprevious+((y-yprevious)*other.SpeedMultiplier);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Green Hill Zone Camera

    if(room == roomGreenHill1){
        if(global.Player[0].x &gt; 6016){
            CameraMaxY = room_height;
        }else
            CameraMaxY = room_height-256;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    

    
    if(LifeMusic == true &amp;&amp; audio_is_playing(sndLife) == false){
        audio_resume_sound(global.CurrentSong);
        audio_sound_gain(global.CurrentSong, 1, 0);
        //audio_sound_gain(snd, 1, 0);
        LifeMusic = false;
    }
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Handle Objects</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(MashExists == true){
        MashGravity += 0.09375;
        if(MashY &gt;= 0)
            MashGravity = -5;
        MashY += MashGravity;
    
        with(objEnemyMasher){
            y = ystart+other.MashY;
        }
    }
    if(ChopExists == true){
        ChopGravity += 0.09375;
        if(ChopY &gt;= 0)
            ChopGravity = -7;
        ChopY += ChopGravity;
    
        with(objEnemyChopper){
            y = ystart+other.ChopY;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
  //  surface_free(HUD);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    view_wview[0]       = global.ViewWidth;
    view_hview[0]       = global.ViewHeight;
    view_hborder[0]     = 152;
    view_vborder[0]     = 96;
    view_hspeed[0]      = 16;   
    view_vspeed[0]      = 16;     
    
    view_xview[0] = objPlayer.x-(view_hborder[0]);
    view_yview[0] = objPlayer.y-(view_vborder[0]);

    room_speed = 60;
    ActivateDistanceX = 130;
    ActivateDistanceY = 130;
    if(room == roomGreenHill1){
        ActivateDistanceX = 260;
        ActivateDistanceY = 260;
    }       
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  
    //Score Text
    draw_sprite(sprS2HUD, 0, view_xview[0]+16, view_yview[0]+9);
    
    
    //Time Text
    if(global.GameTime &gt; 540000 &amp;&amp;(global.Frame mod 30 &lt; 15))
        draw_sprite(sprS2HUD, 4, view_xview[0]+16, view_yview[0]+25);
    else
        draw_sprite(sprS2HUD, 1, view_xview[0]+16, view_yview[0]+25);
    
    //Rings Text
    if(global.Rings == 0 &amp;&amp;(global.Frame mod 30 &lt; 15))    
        draw_sprite(sprS2HUD, 3, view_xview[0]+16, view_yview[0]+41);
    else
        draw_sprite(sprS2HUD, 2, view_xview[0]+16, view_yview[0]+41);
        
    //Lives Icon
    draw_sprite(sprS2Lives, global.Character[0]-1, view_xview[0]+16, view_yview[0]+view_hview[0]-24)
    draw_set_color(c_white);
    draw_set_font(global.FontS2HUD);
    draw_set_halign(fa_left);
    
    //Time Amount
    draw_text(view_xview[0]+59, view_yview[0]+27, string(floor(global.GameTime/60000)));
    draw_text(view_xview[0]+75, view_yview[0]+27, scrNumberStringZero(floor(global.GameTime/1000 mod 60), 2));
    draw_text(view_xview[0]+101, view_yview[0]+27, scrNumberStringZero(floor(global.GameTime/10 mod 100), 2));
    draw_set_halign(fa_right);
    
    //Score Amount
    draw_text(view_xview[0]+119, view_yview[0]+11, global.Score);
    
    //Rings Amount
    draw_text(view_xview[0]+119, view_yview[0]+43, global.Rings);
    draw_set_font(global.FontS2Lives);
    
    //Lives Amount
    draw_text(view_xview[0]+65, view_yview[0]+view_hview[0]-21, global.Lives);
    draw_set_halign(fa_left);
    
    //Swap Button
    draw_sprite(sprSwap, 0, view_xview[0]+304, view_yview[0]+16);
    if (global.UseGP == true){
        if (objPlayer.Action == ActionJumping &amp;&amp; objPlayer.swap == 0) {
            draw_sprite(sprSwap, 4, view_xview[0]+280, view_yview[0]+16);
        } else {
            draw_sprite(sprSwap, 3, view_xview[0]+280, view_yview[0]+16);
        }
    } else {
        if (objPlayer.Action == ActionJumping &amp;&amp; objPlayer.swap == 0) {
            draw_sprite(sprSwap, 2, view_xview[0]+280, view_yview[0]+16);
        } else {
            draw_sprite(sprSwap, 1, view_xview[0]+280, view_yview[0]+16);
        }
    }   
    
    //Super Button
    if (objPlayer.SuperForm == false &amp;&amp; global.Rings &gt;= 50 &amp;&amp; global.ChaosEmeralds == 127 &amp;&amp; objPlayer.UseSuperForms == true &amp;&amp; objPlayer.DisableSuper == false &amp;&amp; objPlayer.Action != ActionTransform) {
        draw_sprite(sprSuper, 0, view_xview[0]+304, view_yview[0]+40);
        if (global.UseGP == true){
            if (objPlayer.Action == ActionJumping) {
                draw_sprite(sprSuper, 4, view_xview[0]+280, view_yview[0]+40);
            } else {
                draw_sprite(sprSuper, 3, view_xview[0]+280, view_yview[0]+40);
            }
        } else {
            if (objPlayer.Action == ActionJumping) {
                draw_sprite(sprSuper, 2, view_xview[0]+280, view_yview[0]+40);
            } else {
                draw_sprite(sprSuper, 1, view_xview[0]+280, view_yview[0]+40);
            }
        }   
    } 


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Countdown</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    with(objPlayer){
         if(Underwater == true &amp;&amp; UnderwaterTimer &lt;= 300){
             draw_sprite(sprWaterCountdown, ceil(UnderwaterTimer/60), x, Camera.y-38);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    global.Character[0]   = consCharacterSonic;
    global.Character[1]   = consCharacterNone;
    objGlobal.Cutscene    = true;

    room_goto(roomCutscene);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//    if(global.DebugMode == false)
  //      exit;
        
    global.Checkpoint = false;
    if(keyboard_check(vk_right)){
        global.Level++;
        if(global.Level == ds_list_size(global.LevelList))
            room_goto(global.EndGameRoom);
        else
            room_goto(ds_list_find_value(global.LevelList, global.Level));
    }else if(keyboard_check(vk_left) &amp;&amp; global.Level != 0){
        global.Level--;
        room_goto(ds_list_find_value(global.LevelList, global.Level));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
