<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

    Object       = ds_list_find_value(global.CollisionList, 0);
    ObjId        = instance_create(128, 128, Object);
    ObjList      = 0;
    CreateFile   = false;
    alarm[0]     = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
        Width = (ObjId.bbox_right-ObjId.bbox_left)+1;
        Height = (ObjId.bbox_bottom-ObjId.bbox_top)+1;
        global.CollisionArray[ObjList, Width+Width+Height+Height] = 0;
        X    = ObjId.bbox_left;
        Y    = ObjId.bbox_top;
        repeat(Width){
            while(collision_point(X, Y, ObjId, true, true) == noone){
                Y++;
                if(Y &gt; ObjId.bbox_bottom)
                    break;
            }
            
            global.CollisionArray[ObjList, X-ObjId.bbox_left] = Y-ObjId.bbox_top;
            
            X++;
            Y  = ObjId.bbox_top;
        }

        X    = ObjId.bbox_left;
        Y    = ObjId.bbox_top;
        repeat(Height){
            while(collision_point(X, Y, ObjId, true, true) == noone){
                X++;
                if(X &gt; ObjId.bbox_right)
                    break;
            }
            
            global.CollisionArray[ObjList, Width+(Y-ObjId.bbox_top)] = X-ObjId.bbox_left;
            
            Y++;
            X  = ObjId.bbox_left;
        }

        X    = ObjId.bbox_left;
        Y    = ObjId.bbox_bottom;
        repeat(Width){
            while(collision_point(X, Y, ObjId, true, true) == noone){
                Y--;
                if(Y &lt; bbox_top)
                    break;
            }
            
            global.CollisionArray[ObjList, Width+Height+(X-ObjId.bbox_left)] = ObjId.bbox_bottom-Y;
            
            X++;
            Y  = ObjId.bbox_bottom;
        }

        X    = ObjId.bbox_right;
        Y    = ObjId.bbox_top;
        repeat(Height){
            while(collision_point(X, Y, ObjId, true, true) == noone){
                X--;
                if(X &lt; bbox_left)
                    break;
            }
            
            global.CollisionArray[ObjList, Width+Height+Width+(Y-ObjId.bbox_top)] = ObjId.bbox_right-X;
            
            Y++;
            X  = ObjId.bbox_right;
        }
        if(CreateFile == true){
            ini_open(working_directory+"\Collisions.ini");
            i = 0;
            repeat(Width){
                ini_write_real(object_get_name(Object), "X_"+string(i), global.CollisionArray[ObjList, i])
                i++;
            }
            repeat(Height){
                ini_write_real(object_get_name(Object), "Y_"+string(i), global.CollisionArray[ObjList, i])
                i++;
            }
            repeat(Width){
                ini_write_real(object_get_name(Object), "X_"+string(i), global.CollisionArray[ObjList, i])
                i++;
            }
            repeat(Height){
                ini_write_real(object_get_name(Object), "Y_"+string(i), global.CollisionArray[ObjList, i])
                i++;
            }
            
            ini_close();
        }
        ObjList++;
        with(Object)
            instance_destroy();
        if(ObjList &lt; ds_list_size(global.CollisionList)){
            Object    = ds_list_find_value(global.CollisionList, ObjList);
            ObjId     = instance_create(128, 128, Object);
           // alarm[0]  = 1;
        }else{
            room_goto(roomSonicMAX);
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
